/*
 * ******************************************************************************
 *   Copyright 2014-2019 Spectra Logic Corporation. All Rights Reserved.
 *   Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 *   this file except in compliance with the License. A copy of the License is located at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *   or in the "license" file accompanying this file.
 *   This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 *   CONDITIONS OF ANY KIND, either express or implied. See the License for the
 *   specific language governing permissions and limitations under the License.
 * ****************************************************************************
 */

buildscript {
    ext.kotlin_version = '1.2.70'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'
    }
}


plugins {
    id "com.palantir.git-version" version "0.10.1"
}

allprojects {
    group = 'com.spectralogic.ds3'
    version = '5.2.1'
}

subprojects {
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'findbugs'

    sourceCompatibility = JavaVersion.VERSION_1_8
    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        testCompile ("org.mockito:mockito-core:$mockitoVersion") {
            exclude group: 'org.hamcrest'
        }

        testCompile "junit:junit:$junitVersion"
        testCompile "org.slf4j:slf4j-simple:$slf4jVersion"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

project(':ds3-sdk') {
    dependencies {
        compile project(':ds3-interfaces')
        compile project(':ds3-utils')
    }
}

project(':ds3-metadata') {
    dependencies {
        compile project(':ds3-interfaces')
        compile project(':ds3-utils')
    }
}

project(':ds3-sdk-integration') {
    dependencies {
        compile project(':ds3-sdk')
        compile project(':ds3-metadata')
    }
}

project(':ds3-sdk-samples') {
    dependencies {
        compile project(':ds3-sdk')
    }
}

project(':ds3-utils') {
    dependencies {
        compile project(':ds3-interfaces')
    }
}
